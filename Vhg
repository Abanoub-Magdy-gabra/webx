To enhance your dashboard with the capability to insert raw numbers and dynamically calculate the rate required to reach the target, follow these steps:

Key Changes:

1. Input for Raw Numbers:

Add fields for "Total Feedbacks", "Positive Feedbacks" (for CSAT), or similar metrics.

Automatically calculate the current rate based on these inputs.



2. Rate to Reach Target:

Add a calculation for the required improvement to reach the target rate.




Here's the updated CSAT Widget section with this functionality:


---

Updated CSAT Widget:

<!-- CSAT Widget -->
<div class="widget">
    <div class="widget-header">
        <div class="widget-title">
            <i class="fas fa-smile"></i>
            Customer Satisfaction
        </div>
        <div class="widget-actions">
            <button class="widget-button" onclick="toggleMetricInputs('csat')">
                <i class="fas fa-edit"></i>
            </button>
            <button class="widget-button" onclick="exportMetrics('csat')">
                <i class="fas fa-download"></i>
            </button>
        </div>
    </div>

    <div id="csat-inputs" class="metric-input-container" style="display: none;">
        <div class="metric-input-group">
            <label>Total Feedbacks:</label>
            <input type="number" class="metric-input" id="csat-total" min="0">
        </div>
        <div class="metric-input-group">
            <label>Positive Feedbacks:</label>
            <input type="number" class="metric-input" id="csat-positive" min="0">
        </div>
        <div class="metric-input-group">
            <label>Target CSAT (%)</label>
            <input type="number" class="metric-input" id="csat-target" min="0" max="100" step="0.1">
        </div>
        <button class="widget-button" onclick="updateCSATMetric()">Update</button>
    </div>

    <div class="metric-list">
        <div class="metric-item">
            <div class="metric-value">
                <i class="fas fa-chart-bar"></i>
                <span id="current-csat">--</span>
            </div>
            <div class="metric-label">Current CSAT</div>
            <div id="csat-trend" class="trend"></div>
        </div>
        <div class="metric-item">
            <div class="metric-value">
                <i class="fas fa-bullseye"></i>
                <span id="target-csat">--</span>
            </div>
            <div class="metric-label">Target CSAT</div>
            <div class="target-progress">
                <div id="csat-progress" class="target-progress-bar"></div>
            </div>
        </div>
        <div class="metric-item">
            <div class="metric-value">
                <i class="fas fa-arrow-circle-up"></i>
                <span id="required-feedbacks">--</span>
            </div>
            <div class="metric-label">Feedbacks Needed to Hit Target</div>
        </div>
    </div>
</div>


---

Updated Script:

Add the following logic to calculate the current rate and required improvement:

function updateCSATMetric() {
    const totalFeedbacks = parseFloat(document.getElementById('csat-total').value);
    const positiveFeedbacks = parseFloat(document.getElementById('csat-positive').value);
    const targetCSAT = parseFloat(document.getElementById('csat-target').value);

    if (isNaN(totalFeedbacks) || isNaN(positiveFeedbacks) || isNaN(targetCSAT)) {
        alert("Please enter all values correctly.");
        return;
    }

    // Calculate current CSAT
    const currentCSAT = (positiveFeedbacks / totalFeedbacks) * 100;
    document.getElementById('current-csat').textContent = currentCSAT.toFixed(1) + '%';

    // Update target display
    document.getElementById('target-csat').textContent = targetCSAT.toFixed(1) + '%';

    // Calculate additional feedbacks needed to hit target
    const requiredPositiveFeedbacks = Math.ceil((targetCSAT / 100) * totalFeedbacks);
    const additionalFeedbacksNeeded = requiredPositiveFeedbacks - positiveFeedbacks;
    document.getElementById('required-feedbacks').textContent = additionalFeedbacksNeeded > 0 ? additionalFeedbacksNeeded : '0';

    // Update trend and progress bar
    const trend = document.getElementById('csat-trend');
    const progressBar = document.getElementById('csat-progress');
    const progress = (currentCSAT / targetCSAT) * 100;

    progressBar.style.width = Math.min(100, progress) + '%';
    progressBar.style.backgroundColor = progress >= 100 ? 'var(--success)' : 'var(--primary)';

    trend.className = `trend ${currentCSAT >= targetCSAT ? 'positive' : 'negative'}`;
    trend.innerHTML = `
        <i class="fas fa-arrow-${currentCSAT >= targetCSAT ? 'up' : 'down'}"></i>
        <span>${Math.abs(currentCSAT - targetCSAT).toFixed(1)}%</span>
    `;

    // Update chart
    updateChart('csat', currentCSAT, targetCSAT);
}


---

Key Features:

1. Inputs for Total and Positive Feedbacks:

Users input raw data instead of rates.



2. Current Rate Calculation:

Automatically calculates the current CSAT rate.



3. Feedbacks Needed:

Calculates the number of additional positive feedbacks required to hit the target.



4. Dynamic Trend and Progress:

Reflects progress and trends visually.



5. Chart Updates:

Updates the historical chart with new data.




Let me know if you need further refinements!

